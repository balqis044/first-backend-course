const express = require("express");
const axios = require("axios");
const dotenv = require("dotenv");
const rateLimit = require("express-rate-limit");

dotenv.config();
const app = express();
const PORT = process.env.PORT || 3000;
const API_KEY = process.env.API_KEY;
const BASE_URL = "http://www.omdbapi.com/";

// from chatgpt
const limiter = rateLimit({
  windowMs: 60 * 1000, // 1 minute
  max: 5, // Maximum requests per IP
  message: "Too many requests, please try again later."
});
app.use(limiter);



app.get("/movie/:movieName", async (req, res) => {
  try {
    const movieName = req.params.movieName;
    const response = await axios.get(`${BASE_URL}?t=${movieName}&apikey=${API_KEY}`);
    if (response.data.Response === "False") {
      return res.status(404).json({ error: "Movie not found" });
    }

    const movie = {
      id: response.data.imdbID,
      title: response.data.Title,
      rating: response.data.imdbRating,
      image: response.data.Poster
    };
    res.json(movie);
  } catch (error) {
    res.status(500).json({ error: " error" });
  }
});

// the best rated movie 
app.get("/movie/:movieName/best", async (req, res) => {
  try {
    const movieName = req.params.movieName;
    const response = await axios.get(`${BASE_URL}?s=${movieName}&apikey=${API_KEY}`);
    
    if (response.data.Response === "False") {
      return res.status(404).json({ error: "No movies found" });
    }

   
    const movies = response.data.Search;
    let bestMovie = null;
    for (const movie of movies) {
      const details = await axios.get(`${BASE_URL}?i=${movie.imdbID}&apikey=${API_KEY}`);
      if (!bestMovie || (details.data.imdbRating > bestMovie.rating)) {
        bestMovie = {
          id: details.data.imdbID,
          title: details.data.Title,
          rating: details.data.imdbRating,
          image: details.data.Poster
        };
      }
    }

    res.json(bestMovie || { error: "No best movie found" });
  } catch (error) {
    res.status(500).json({ error: "error" });
  }
});

app.listen(PORT, () => {
  console.log(`Server is running on port ${PORT}`);
});
